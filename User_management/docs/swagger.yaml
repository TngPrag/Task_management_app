basePath: /task_app/user_manager_service/api/v0.1
definitions:
  core.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
  requests.CreateUserDto:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      user_name:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - user_name
    type: object
  requests.LoginDto:
    properties:
      email:
        type: string
      password:
        type: string
      user_name:
        type: string
    required:
    - email
    - user_name
    type: object
  requests.UserCredentialUpdateDto:
    properties:
      password:
        type: string
      user_name:
        type: string
    required:
    - password
    - user_name
    type: object
  requests.UserNotifyDto:
    properties:
      deadline:
        type: string
      description:
        type: string
      title:
        type: string
      user_id:
        type: string
    required:
    - deadline
    - description
    - title
    - user_id
    type: object
  responses.UserAuthProfileDto:
    properties:
      email:
        type: string
      name:
        type: string
      user_id:
        type: string
      user_name:
        type: string
    required:
    - email
    - name
    - user_id
    - user_name
    type: object
host: localhost:8981
info:
  contact:
    email: tng.nat2023@gmail.com
    name: Tsegay Negassi
  description: This is used to manage users of the app
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Task User management Service
  version: "0.1"
paths:
  /health:
    get:
      description: Get the health status of the user management service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check the health of the user management service
      tags:
      - health
  /user/login:
    post:
      consumes:
      - application/json
      description: Login with username and password
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Login User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - user
  /user/notify:
    post:
      consumes:
      - application/json
      description: Send an email notification to a user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Notification
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/requests.UserNotifyDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Notify a user via email
      tags:
      - user
  /user/read/{user_id}:
    get:
      consumes:
      - application/json
      description: Get user details by user ID
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - user
  /user/read_all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of users where the owner's ID matches the authenticated
        user's ID
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List users by owner ID
      tags:
      - user
  /user/remove/{user_id}:
    delete:
      consumes:
      - application/json
      description: Remove a user from the system by their ID
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove a user by ID
      tags:
      - user
  /user/remove_all:
    delete:
      consumes:
      - application/json
      description: Remove users where the owner's ID matches the authenticated user's
        ID
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove users by owner ID
      tags:
      - user
  /user/update:
    put:
      consumes:
      - application/json
      description: Update the username and password of a user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Credential Update DTO
        in: body
        name: userCredentialUpdateDto
        required: true
        schema:
          $ref: '#/definitions/requests.UserCredentialUpdateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user credentials (username and password)
      tags:
      - user
  /user/verify:
    get:
      consumes:
      - application/json
      description: Login with username and password
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserAuthProfileDto'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Verify a user
      tags:
      - user
  /user/write:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Sign up a new user
      tags:
      - user
swagger: "2.0"
